ORG 000H
	
RS EQU P1.4
RW EQU P1.5
E  EQU P1.6	
SIGNAL_PIN EQU P3.6
MESSAGE_ADDRESS EQU 250H
TIMER_VALUES_START_ADDRESS EQU 1FEH
	
CLR SIGNAL_PIN

ACALL LCD_INIT
START:
;******************** WRITING MESSAGE ******************
MOV R6,#16 ;COUNTER
MOV DPTR,#MESSAGE_ADDRESS
PRINT:CLR A
MOVC A,@A+DPTR
ACALL LCD_DATA
INC DPTR
DJNZ R6,PRINT

;******************** TAKING INPUT FROM USER ******************
ACALL KEYPAD
MOV B,A
CJNE A,#'0',DISPLAY_FREQUENCY
SJMP INVALID

;******************** DISPLAYING FREQUENCY ON LCD ******************
DISPLAY_FREQUENCY:
MOV B,A
ACALL LCD_CLEAR
MOV A,B
ACALL LCD_DATA
MOV A,#'k'
ACALL LCD_DATA
MOV A,#'H'
ACALL LCD_DATA
MOV A,#'Z'
ACALL LCD_DATA
MOV A,B

ANL A,#0FH
CJNE A,#1,TIMER_MODE_2


MOV TMOD,#10H                ;INITIALIZING TIMER1 ON MODE 1
FREQUENCY_1_KHZ:
MOV TL1,#34H
MOV TH1,#0FEH
SETB TR1                     ;START TIMER 
HERE_1_KHZ:JNB TF1,HERE_1_KHZ;wait till timer ends
CLR TR1                      ;STOP TIMER
CLR TF1                      ;CLEAR THE FLAG
CPL SIGNAL_PIN               ;TOGGLING SIGNAL PIN TO GENERATE CLOCK SIGNAL
SJMP FREQUENCY_1_KHZ


TIMER_MODE_2:
MOV TMOD,#20H              ;INITIALIZING TIMER1 ON MODE 2
MOV DPTR,#TIMER_VALUES_START_ADDRESS
MOVC A,@A+DPTR            ;LOADING THE INITIAL VALUE OF TIMER FROM MEMORY

MOV TH1,A
AGAIN_ACC:
SETB TR1                   ;START TIMER1
HERE_ACC: JNB TF1,HERE_ACC ;wait till timer ends
CLR TF1                    ;CLEAR TIMER FLAG
CLR TR1                    ;STOP TIMER1
CPL SIGNAL_PIN             ;TOGGLING SIGNAL PIN TO GENERATE CLOCK SIGNAL
SJMP AGAIN_ACC


;******************** INVALID ROUTINE ******************
INVALID:
ACALL LCD_CLEAR
MOV DPTR,#270H
MOV R6,#14 ;COUNTER
PRINT_INVALID:CLR A
MOVC A,@A+DPTR
ACALL LCD_DATA
INC DPTR
DJNZ R6,PRINT_INVALID
ACALL MESSAGE_DELAY
ACALL LCD_CLEAR
SJMP START


;******************** Initialization of LCD ******************
LCD_INIT:
MOV A,#02H  ;Return Home
ACALL LCD_COMMAND

MOV A,#28H  ;4-Bit Mode, 2 Lines 
ACALL LCD_COMMAND

MOV A,#0CH  ;Display on , Cursor off , Cursor blink off
ACALL LCD_COMMAND

MOV A,#06H  ;Increment Cursor after every write operation
ACALL LCD_COMMAND

MOV A,#01H  ;Clear the LCD
ACALL LCD_COMMAND
RET


;******************** FUNCTION OF LCD COMMAND ******************
LCD_COMMAND:
MOV R7,A
CLR RS
CLR E
CLR RW

ANL P2,#0FH
ANL A,#0F0H
ORL P2,A
SETB E
ACALL DELAY
CLR E
ACALL DELAY

MOV A,R7
SWAP A
ANL P2,#0FH
ANL A,#0F0H
ORL P2,A
SETB E
ACALL DELAY
CLR E
ACALL DELAY
RET


;******************** FUNCTION OF LCD DATA ******************
LCD_DATA:
MOV R7,A
SETB RS
CLR E
CLR RW

ANL P2,#0FH
ANL A,#0F0H
ORL P2,A
SETB E
ACALL DELAY
CLR E
ACALL DELAY

MOV A,R7
SWAP A
ANL P2,#0FH
ANL A,#0F0H
ORL P2,A
SETB E
ACALL DELAY
CLR E
ACALL DELAY

RET


;******************** FUNCTION OF KEYPAD ******************
KEYPAD:
ORL P2,#0FH
ANL P1,#0F0H
NEXT:
CLR A
MOV A,P2
ANL A,#0FH
CJNE A,#00001111B,NEXT
AGAIN:
MOV A,P2
ANL A,#0FH
CJNE A,#0FH,OVER
SJMP AGAIN
OVER:
ACALL DDELAY
MOV A,P2
ANL A,#0FH
CJNE A,#0FH,OVER2
SJMP AGAIN
OVER2:
ANL P1,#11111110B
ORL P1,#00001110B
MOV A,P2
ANL A,#0FH
CJNE A,#0FH,ROW0
ANL P1,#11111101B
ORL P1,#00001101B
MOV A,P2
ANL A,#0FH
CJNE A,#0FH,ROW1
ANL P1,#11111011B
ORL P1,#00001011B
MOV A,P2
ANL A,#0FH
CJNE A,#0FH,ROW2
ANL P1,#11110111B
ORL P1,#00000111B
MOV A,P2
ANL A,#0FH
CJNE A,#0FH,ROW3
SJMP AGAIN
ROW0:
MOV DPTR,#KROW0
SJMP FINAL
ROW1:
MOV DPTR,#KROW1
SJMP FINAL
ROW2:
MOV DPTR,#KROW2
SJMP FINAL
ROW3:
MOV DPTR,#KROW3
SJMP FINAL
FINAL:
RRC A
JNC MATCH
INC DPTR
SJMP FINAL
MATCH:
CLR A
MOVC A,@ A+DPTR
RET


;******************** DELAY OF LCD ******************
DELAY:
MOV R3,#50
LOOP2: MOV R2,#255
LOOP1: DJNZ R2,LOOP1
DJNZ R3,LOOP2
RET

;******************** DELAY OF KEYPAD ******************
DDELAY:
MOV R5,#36
LOP2: MOV R4,#255
LOP1: DJNZ R4,LOP1
DJNZ R5,LOP2
RET

;******************** DELAY OF MESSAGE ******************
MESSAGE_DELAY:
MOV R0,#30
DELAY_AGAIN:ACALL DELAY
DJNZ R0,DELAY_AGAIN
RET

;******************** CLEAR OF LCD ******************
LCD_CLEAR:
MOV A,#01H
LCALL lCD_COMMAND
RET


;******************** DATA SECTION ******************
ORG 200H
	DB 1AH, 67H, 8DH, 0A4H, 0B4H, 0BFH, 0C7H, 0CDH
		
ORG 220H
	KROW0: DB '7','8','9','0'
	KROW1: DB '4','5','6','0'
	KROW2: DB '1','2','3','0'
	KROW3: DB '0','0','0','0'
		
ORG 250H
	FIRST_MESSAGE: DB 'c','h','o','o','s','e',' ','f','r','e','q','u','e','n','c','y'
		
ORG 270H
	INVALID_MESSAGE: DB 'I','n','v','a','l','i','d',' ','i','n','p','u','t','!'
END